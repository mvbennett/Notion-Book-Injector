{"ast":null,"code":"var _jsxFileName = \"/Users/mike/code/mvbennett/Notion-Book-Injector/app/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    search,\n    setQuery,\n    setResults\n  } = _ref;\n  // const [query, setQuery] = useState();\n  const [input, setInput] = useState();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResults([]);\n    setQuery(input);\n    const searchResults = await search(input);\n    const parsedResults = [];\n    searchResults.forEach(result => {\n      if (result.authors !== undefined && result.description !== undefined) {\n        parsedResults.push(result);\n      }\n    });\n    setResults(parsedResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a book title or author name here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"+E2veEehVihf73G+Rv7Nq0ryIOw=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Search","search","setQuery","setResults","input","setInput","handleSubmit","e","preventDefault","searchResults","parsedResults","forEach","result","authors","undefined","description","push","target","value"],"sources":["/Users/mike/code/mvbennett/Notion-Book-Injector/app/src/components/Search.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst Search = ({search, setQuery, setResults}) => {\n  // const [query, setQuery] = useState();\n  const [input, setInput] = useState();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setResults([]);\n    setQuery(input);\n    const searchResults = await search(input);\n    const parsedResults = [];\n    searchResults.forEach((result) => {\n      if (result.authors !== undefined && result.description !== undefined) {\n        parsedResults.push(result);\n      }\n    });\n    setResults(parsedResults);\n  }\n  return(\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={e => setInput(e.target.value)} placeholder=\"Type a book title or author name here\" />\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,MAAM,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAACC,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC;EAC5C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,EAAE;EACpC,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClBL,UAAU,CAAC,EAAE,CAAC;IACdD,QAAQ,CAACE,KAAK,CAAC;IACf,MAAMK,aAAa,GAAG,MAAMR,MAAM,CAACG,KAAK,CAAC;IACzC,MAAMM,aAAa,GAAG,EAAE;IACxBD,aAAa,CAACE,OAAO,CAAEC,MAAM,IAAK;MAChC,IAAIA,MAAM,CAACC,OAAO,KAAKC,SAAS,IAAIF,MAAM,CAACG,WAAW,KAAKD,SAAS,EAAE;QACpEJ,aAAa,CAACM,IAAI,CAACJ,MAAM,CAAC;MAC5B;IACF,CAAC,CAAC;IACFT,UAAU,CAACO,aAAa,CAAC;EAC3B,CAAC;EACD,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEJ,YAAa;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEC,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACU,MAAM,CAACC,KAAK,CAAE;QAAC,WAAW,EAAC;MAAuC;QAAA;QAAA;QAAA;MAAA,QAAG,eAClH;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACjC;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GAxBKlB,MAAM;AAAA,KAANA,MAAM;AA0BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}