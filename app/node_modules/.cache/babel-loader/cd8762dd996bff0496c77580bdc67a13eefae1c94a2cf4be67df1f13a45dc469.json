{"ast":null,"code":"var _jsxFileName = \"/Users/mike/code/mvbennett/Notion-Book-Injector/app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import search from './myApp';\nimport Search from './components/Search';\nimport Results from './components/Results';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState();\n  const [query, setQuery] = useState();\n  const search = async book => {\n    const response = await fetch(`http://localhost:5000/search/${book}`);\n    const data = await response.json();\n    return data;\n  };\n  results === undefined ? console.log('no results yet') : console.log(results.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notion Book Injector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      search: search,\n      setResults: setResults,\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WgECesMsNT1eYXJQWjq1SoP6brc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Results","useState","App","results","setResults","query","setQuery","search","book","response","fetch","data","json","undefined","console","log","value"],"sources":["/Users/mike/code/mvbennett/Notion-Book-Injector/app/src/App.js"],"sourcesContent":["import './App.css';\n// import search from './myApp';\nimport Search from './components/Search';\nimport Results from './components/Results';\nimport { useState } from 'react';\n\nfunction App() {\n  const [results, setResults] = useState();\n  const [query, setQuery] = useState();\n  const search = async (book) => {\n    const response = await fetch(`http://localhost:5000/search/${book}`);\n    const data = await response.json();\n    return data;\n  }\n  results === undefined ? console.log('no results yet') : console.log(results.value);\n  return (\n    <div className=\"App\">\n      <h1>Notion Book Injector</h1>\n      <Search search={search} setResults={setResults} setQuery={setQuery} />\n      <Results results={results}/>\n      <h2>{query}</h2>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,EAAE;EACxC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,EAAE;EACpC,MAAMM,MAAM,GAAG,MAAOC,IAAI,IAAK;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,IAAK,EAAC,CAAC;IACpE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,OAAOD,IAAI;EACb,CAAC;EACDR,OAAO,KAAKU,SAAS,GAAGC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAGD,OAAO,CAACC,GAAG,CAACZ,OAAO,CAACa,KAAK,CAAC;EAClF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7B,QAAC,MAAM;MAAC,MAAM,EAAET,MAAO;MAAC,UAAU,EAAEH,UAAW;MAAC,QAAQ,EAAEE;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACtE,QAAC,OAAO;MAAC,OAAO,EAAEH;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5B;MAAA,UAAKE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEV;AAAC,GAjBQH,GAAG;AAAA,KAAHA,GAAG;AAmBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}