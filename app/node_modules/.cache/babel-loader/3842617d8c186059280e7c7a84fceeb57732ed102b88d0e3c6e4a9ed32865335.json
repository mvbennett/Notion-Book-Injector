{"ast":null,"code":"// import fetch from 'node-fetch';\n// import * as dotenv from 'dotenv' // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\n// dotenv.config()\n\n// const express = require('express');\n// const app = express();\n// const cors = require('cors');\nrequire('dotenv').config();\nconst search = title => {\n  const result = getBook(title);\n  return result;\n};\nconst createResults = success => {\n  // console.log(success.items[0]);\n  let results = [];\n  success.items.forEach(element => {\n    const result = element.volumeInfo;\n    // console.log(result['title']);\n    const covers = result.imageLinks;\n    let cover = '';\n    if (covers !== undefined) {\n      cover = covers.thumbnail;\n    }\n    const resultObj = {\n      title: result['title'],\n      author: result['authors'],\n      pageCount: result['pageCount'],\n      publishedDate: result.publishedDate,\n      cover: cover,\n      // these two for display purposes only\n      description: result.description,\n      previewLink: result.previewLink\n    };\n    // console.log(resultObj);\n    results.push(resultObj);\n    // console.log(results);\n  });\n\n  // console.log(results);\n  return results;\n};\nconst getBook = async title => {\n  const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${process.env.BOOK_API}&language=en`);\n  let data = await response.json();\n  return createResults(data);\n};\n\n// let pachinko = await search('pachinko');\n// console.log(pachinko);\nexport default search;","map":{"version":3,"names":["require","config","search","title","result","getBook","createResults","success","results","items","forEach","element","volumeInfo","covers","imageLinks","cover","undefined","thumbnail","resultObj","author","pageCount","publishedDate","description","previewLink","push","response","fetch","process","env","BOOK_API","data","json"],"sources":["/home/mike/code/mvbennett/Notion-Book-Injector/app/src/myApp.js"],"sourcesContent":["// import fetch from 'node-fetch';\n// import * as dotenv from 'dotenv' // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\n// dotenv.config()\n\n// const express = require('express');\n// const app = express();\n// const cors = require('cors');\nrequire('dotenv').config();\n\nconst search = (title) => {\n  const result = getBook(title);\n  return result;\n};\n\nconst createResults = (success) => {\n  // console.log(success.items[0]);\n  let results = []\n  success.items.forEach(element => {\n    const result = element.volumeInfo;\n    // console.log(result['title']);\n    const covers = result.imageLinks;\n    let cover = '';\n    if (covers !== undefined) {\n      cover = covers.thumbnail;\n    }\n    const resultObj = {\n      title: result['title'],\n      author: result['authors'],\n      pageCount: result['pageCount'],\n      publishedDate: result.publishedDate,\n      cover: cover,\n      // these two for display purposes only\n      description: result.description,\n      previewLink: result.previewLink\n    };\n    // console.log(resultObj);\n    results.push(resultObj)\n    // console.log(results);\n  });\n\n  // console.log(results);\n  return results\n};\n\nconst getBook = async (title) => {\n  const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${process.env.BOOK_API}&language=en`);\n  let data = await response.json();\n\n  return createResults(data);\n}\n\n// let pachinko = await search('pachinko');\n// console.log(pachinko);\nexport default search;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAE1B,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,MAAMC,MAAM,GAAGC,OAAO,CAACF,KAAK,CAAC;EAC7B,OAAOC,MAAM;AACf,CAAC;AAED,MAAME,aAAa,GAAIC,OAAO,IAAK;EACjC;EACA,IAAIC,OAAO,GAAG,EAAE;EAChBD,OAAO,CAACE,KAAK,CAACC,OAAO,CAACC,OAAO,IAAI;IAC/B,MAAMP,MAAM,GAAGO,OAAO,CAACC,UAAU;IACjC;IACA,MAAMC,MAAM,GAAGT,MAAM,CAACU,UAAU;IAChC,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIF,MAAM,KAAKG,SAAS,EAAE;MACxBD,KAAK,GAAGF,MAAM,CAACI,SAAS;IAC1B;IACA,MAAMC,SAAS,GAAG;MAChBf,KAAK,EAAEC,MAAM,CAAC,OAAO,CAAC;MACtBe,MAAM,EAAEf,MAAM,CAAC,SAAS,CAAC;MACzBgB,SAAS,EAAEhB,MAAM,CAAC,WAAW,CAAC;MAC9BiB,aAAa,EAAEjB,MAAM,CAACiB,aAAa;MACnCN,KAAK,EAAEA,KAAK;MACZ;MACAO,WAAW,EAAElB,MAAM,CAACkB,WAAW;MAC/BC,WAAW,EAAEnB,MAAM,CAACmB;IACtB,CAAC;IACD;IACAf,OAAO,CAACgB,IAAI,CAACN,SAAS,CAAC;IACvB;EACF,CAAC,CAAC;;EAEF;EACA,OAAOV,OAAO;AAChB,CAAC;AAED,MAAMH,OAAO,GAAG,MAAOF,KAAK,IAAK;EAC/B,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAgDvB,KAAM,QAAOwB,OAAO,CAACC,GAAG,CAACC,QAAS,cAAa,CAAC;EAC9H,IAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;EAEhC,OAAOzB,aAAa,CAACwB,IAAI,CAAC;AAC5B,CAAC;;AAED;AACA;AACA,eAAe5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}